AllCops:
  NewCops: enable
  SuggestExtensions: false
  TargetRubyVersion: 3.0.0
  Exclude:
    # デフォルトの設定
    - "vendor/**/*"
    - "spec/**/*"
    # 不要系
    - "tmp/**/*"
    - "log/**/*"
    - "coverage/**/*"
    - ".github/**/*"

# ドキュメントの無い public class は許可
Style/Documentation:
  Enabled: false
# 空のメソッドを許可
Style/EmptyMethod:
  Enabled: false
# if 内での個別変数代入を許可
Style/ConditionalAssignment:
  Enabled: false
# else 内での if の許可
Style/IfInsideElse:
  Enabled: false
# bad: [1,2,3].map { _1.to_s }, good: [1,2,3].map(&:to_s)
#   _1.xxx のほうが読みやすいことが多いので false に変更しています
Style/SymbolProc:
  Enabled: false
# 空の else を許可
Style/EmptyElse:
  Enabled: false
# not禁止を許可
Style/Not:
  Enabled: false
# ガード句の強制を許可
Style/GuardClause:
  Enabled: false
# if文等の空ブロックを許可
Lint/EmptyConditionalBody:
  Enabled: false
# 使い分けが面倒なのでダブルで統一
Style/StringLiterals:
  EnforcedStyle: double_quotes
# Hashやメソッドの階層化はスペース分だけ
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

Metrics/ModuleLength:
  Max: 400
Metrics/BlockLength:
  Max: 100
Metrics/ClassLength:
  Max: 300

# frozen literal をコメントで書くかどうか
# Ruby3系からデフォルトtrueなのでfalseにする
Style/FrozenStringLiteralComment:
  Enabled: false

# 1行の長さ。基本長くてもOK
Layout/LineLength:
  Max: 300

# メソッド名の長さ
# わかりやすさ重視とするので長さは考慮しない
Metrics/MethodLength:
  Enabled: false

# if を1行で書くべきかどうか
# 1行で書かない方が可読性が高くなるケースも散見されるため
Style/IfUnlessModifier:
  Enabled: false

# Hashの最後の項目にカンマを許すかどうか
# カンマあったほうが便利なのでfalse
Style/TrailingCommaInHashLiteral:
  Enabled: false
Style/TrailingCommaInArguments:
  Enabled: false
Style/TrailingCommaInArrayLiteral:
  Enabled: false

# ブロックコメントを許可するかどうか
# 使ってもいいではないかということで許可
Style/BlockComments:
  Enabled: false

# self. をつけたほうがわかりやすいときもあるのでfalse(可読性重視)
Style/RedundantSelf:
  Enabled: false

# unless よりも if のほうが見やすいときがあるため
Style/NegatedIf:
  Enabled: false

# get とか set という名前のついたメソッドを許可するか
# DSL的なものを利用するときに利用することもあるため許可する
Naming/AccessorMethodName:
  Enabled: false